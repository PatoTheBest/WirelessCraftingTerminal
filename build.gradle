buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
	}
	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
	}
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

version = "1.12.2-" + getVersion()
group = "p455w0rd"
archivesBaseName = "WirelessCraftingTerminal"
sourceCompatibility = targetCompatibility = "1.8"

minecraft {
	version = "1.12.2-14.23.4.2760"
	
	runDir = "run"
	mappings = "snapshot_20171003"
	useDepAts = true
}

repositories {

	maven {
		name = "progwml6"
		url = "http://dvs1.progwml6.com/files/maven"
	}
	maven {
		name = "tterrag"
		url = "http://maven.tterrag.com"
	}
	maven {
		name = "tterrag2"
		url = "http://maven2.tterrag.com"
	}
	maven {
		url "http://mobiusstrip.eu/maven"
	}
	maven {
		name = "tehnut"
		url = "http://tehnut.info/maven"
	}
	maven {
		name = "covers Maven"
		url = "http://maven.covers1624.net"
	}

	maven {
		url 'http://maven.mcmoddev.com'
	}
	maven { url 'https://jitpack.io' }
}
dependencies {
	deobfCompile "mezz.jei:jei_1.12.2:+"
	//compile project(':appliedenergistics2')
	deobfCompile "com.enderio.core:EnderCore:1.12.2-0.5.37"
	deobfCompile "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2"
    deobfCompile "net.darkhax.tesla:Tesla-1.12:1.0.61"
	deobfCompile "mcp.mobius.waila:Hwyla:1.8.20-B35_1.12"
	deobfCompile "appeng:appliedenergistics2:rv6-beta-1"
	deobfCompile "cofh:RedstoneFlux:1.12-2.0.2.4:universal"
	deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.23-16"
	deobfCompile "p455w0rdslib:p455w0rdslib:1.12.2-2.0.35"
	deobfCompile "com.github.azanor:Baubles:5df3d468af"
	deobfCompile 'com.github.YaLTeR:MouseTweaks:-SNAPSHOT'
}

task apiJar(type: Jar) {
	classifier = 'api'
	from sourceSets.api.output
	from sourceSets.api.allJava
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

artifacts {
	archives apiJar
	archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            if (project.hasProperty("local_maven") || (project.hasProperty("maven_user") && project.hasProperty("maven_pass"))) {
				if (project.hasProperty("maven_pass")) {
					println "Uploading to remote maven."
					repository(url: "http://maven_upload.covers1624.net/") {
						authentication(userName: project.getProperty("maven_user"), password: project.getProperty("maven_pass"))
					}
				} else {
					println "Uploading to local maven."
					repository(url: "file://${local_maven}/.m2/repository")
				}
                pom {
                    groupId = project.group
                    // Force the maven upload to use the <mcversion>-<version> syntax preferred at files
                    artifactId = project.archivesBaseName
                    project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description 'WirelessCraftingTerminal 2'
                        url 'https://github.com/p455w0rd/WirelessCraftingTerminal'

                        scm {
                            url 'https://github.com/p455w0rd/WirelessCraftingTerminal'
                            connection 'scm:git:git://github.com/p455w0rd/WirelessCraftingTerminal.git'
                            developerConnection 'scm:git:git@github.com:p455w0rd/WirelessCraftingTerminal.git'
                        }

                        issueManagement {
                            system 'github'
                            url 'https://github.com/p455w0rd/WirelessCraftingTerminal/issues'
                        }

                        licenses {
                            license {
                                name 'MIT'
                                url 'https://opensource.org/licenses/MIT'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id 'TheRealp455w0rd'
                                name 'Mike Balser'
                                roles { role 'developer' }
                            }
                        }
                    }
                }
            }
        }
    }
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	from (sourceSets.main.resources.srcDirs) {
		include "mcmod.info"
		expand "version": project.version, "mcversion": project.minecraft.version
	}
		
	from (sourceSets.main.resources.srcDirs) {
		exclude "mcmod.info"
	}
}

String getVersion() {
	String major = "0";
	String revision = "0";
	String patch = "0";
	String prefix = "public static final String VERSION = \"";
	File file = file("src/main/java/p455w0rd/wct/init/ModGlobals.java")
	file.eachLine { String s ->
		s = s.trim();
		if (s.startsWith(prefix)) {
			s = s.substring(prefix.length(), s.length() - 2);
			String[] pts = s.split("\\.");

			major = pts[0];
			revision = pts[1];
			patch = pts[2];
		}
	}
	return "$major.$revision.$patch";
}
